openapi: 3.0.2
info:
  title: EployeeAPI
  version: "1.0.0"

paths:
  /auth:
    post:
      security:
        - bearerAuth: []
      description: "Authorization user"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/User"
      responses:
        '200':
          description: "Successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Success"
        '401':
          description: "Unauthorization"
          content:
            application/json:
              schema:
                $ref: "#/components/responses/UnauthorizedError"
        '404':
          description: "Page not found"
          content:
            application/json:
              schema:
                $ref: "#/components/responses/NotFoundError"
        '5XX':
          description: Unexpected error.
  /employees:
    get:
      description: Get all employees
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Number of equal parts of employees
        - in: query
          name: number
          schema:
            type: integer
          description: Number of element of one page
      responses:
        '200':
          description: Get an array of employees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
        '404':
          description: "Page not found"
          content:
            application/json:
              schema:
                $ref: "#/components/responses/NotFoundError"
        '429':
          description: Too many requests
  /employee/{id}:
    delete:
      description: "delete employee by id"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: "#/components/schemas/Employee"
      responses:
        '204':
          description: "No Content"
        '404':
          description: "Page not found"
          content:
            application/json:
              schema:
                $ref: "#/components/responses/NotFoundError"
  /employee:
    get:
      description: Get an employee
      responses:
        '200':
          description: Get an employee
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '404':
          description: "Page not found"
          content:
            application/json:
              schema:
                $ref: "#/components/responses/NotFoundError"
        '429':
          description: Too many requests
        '5XX':
          description: Unexpected error.
    post:
      security:
        - bearerAuth: []
      description: Create employee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee"
      responses:
        '200':
          description: "Successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Success"
        '401':
          description: "Unauthorization"
          content:
            application/json:
              schema:
                $ref: "#/components/responses/UnauthorizedError"
        '404':
          description: "Page not found"
          content:
            application/json:
              schema:
                $ref: "#/components/responses/NotFoundError"
        '5XX':
          description: Unexpected error.
    put:
      description: "update employee"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/Employee"
                - required:
                    - update_firstName
                    - update_lasName
                    - update_uuid
                    - update_position_id
      responses:
        '201':
          description: "Ok"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employee"
        '404':
          description: "Page not found"
          content:
            application/json:
              schema:
                $ref: "#/components/responses/NotFoundError"
        '415':
          description: "Unsupported media type"
          content:
            application/json:
              schema:
                $ref: "#/components/responses/UnsupportedType"

  /positions:
    get:
      description: Get all positions
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Number of equal parts of positions
        - in: query
          name: number
          schema:
            type: integer
          description: Number of element of one page
      responses:
        '200':
          description: Get an array of position
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Position'
        '404':
          description: "Page not found"
          content:
            application/json:
              schema:
                $ref: "#/components/responses/NotFoundError"
        '429':
          description: Too many requests
  /position:
    get:
      description: Get an position
      responses:
        '200':
          description: Get an position
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Position'
    post:
      security:
        - bearerAuth: []
      description: Create position
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Position"
      responses:
        '201':
          description: "Created"

    put:
      description: "update position"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/Position"
                - required:
                    - update_name
                    - update_salary
                    - update_uuid
      responses:
        '201':
          description: "Ok"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Position"
        '404':
          description: "Page not found"
          content:
            application/json:
              schema:
                $ref: "#/components/responses/NotFoundError"
        '415':
          description: "Unsupported media type"
          content:
            application/json:
              schema:
                $ref: "#/components/responses/UnsupportedType"
  /position/{id}:
    delete:
      description: "delete position by id"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: "No Content"
        '404':
          description: "Page not found"
          content:
            application/json:
              schema:
                $ref: "#/components/responses/NotFoundError"
components:
  schemas:
    User:
      properties:
        login:
          type: string
        password:
          type: string
    Employee:
      properties:
        firstName:
          type: string
        lasName:
          type: string
        uuid:
          type: string
        positionID:
          type: string
    Position:
      properties:
        name:
          type: string
        salary:
          type: integer
        uuid:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
    NotFoundError:
      description: Not Found
    Success:
      description: Ok
    Created:
      description: Created
    NotAllowed:
      description: Method not allowed
    NoContent:
      description: No content
    BadRequest:
      description: Bad request
    UnsupportedType:
      description: Unsupported media type